generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transcription {
  id         String    @id @default(uuid())
  filename   String
  content    String
  uploadedAt DateTime  @default(now())
  fileSize   Int
  mimeType   String
  status     String    @default("pending") // pending, processed, failed
  summaries  Summary[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  enrichedData Json?
  
  // Add relation to ProductTerm
  productTerms ProductTerm[] @relation("TranscriptionToProductTerm")

  @@index([status])
}

model Summary {
  id                String    @id @default(uuid())
  transcription     Transcription @relation(fields: [transcriptionId], references: [id])
  transcriptionId   String
  content          String
  productMentions  String[]
  isCasual        Boolean    @default(false)
  verificationStatus String   @default("pending") // pending, verified, rejected
  enrichedData     Json?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  chatReferences   ChatMessage[]

  @@index([verificationStatus])
  @@index([transcriptionId])
}

model ChatMessage {
  id         String    @id @default(uuid())
  message    String
  response   String
  references Summary[]
  timestamp  DateTime  @default(now())
  context    Json?

  @@index([timestamp])
}

model ProductTerm {
  id           String         @id @default(uuid())
  term         String         @unique
  description  String?
  category     String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  
  // Add relation to Transcription
  transcriptions Transcription[] @relation("TranscriptionToProductTerm")
}

model Pdf {
  id           String    @id @default(uuid())
  filename     String
  url          String
  fileSize     Int
  mimeType     String
  notes        String?
  status       String    @default("pending") // pending, processed, failed
  uploadedAt   DateTime  @default(now())
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  enrichedData Json?

  @@index([status])
}

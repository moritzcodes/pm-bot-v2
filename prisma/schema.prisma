// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transcription {
  id         String    @id @default(uuid())
  filename   String
  content    String
  uploadedAt DateTime  @default(now())
  fileSize   Int
  mimeType   String
  status     String    @default("pending") // pending, processed, failed
  summaries  Summary[]
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@index([status])
}

model Summary {
  id                String    @id @default(uuid())
  transcription     Transcription @relation(fields: [transcriptionId], references: [id])
  transcriptionId   String
  content          String
  productMentions  String[]
  isCasual        Boolean    @default(false)
  verificationStatus String   @default("pending") // pending, verified, rejected
  enrichedData     Json?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  chatReferences   ChatMessage[]

  @@index([verificationStatus])
  @@index([transcriptionId])
}

model ChatMessage {
  id         String    @id @default(uuid())
  message    String
  response   String
  references Summary[]
  timestamp  DateTime  @default(now())
  context    Json?

  @@index([timestamp])
}
